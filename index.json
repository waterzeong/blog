[{"content":"\r\n对于 Web 开发者来说很有用的 Atom 插件！刚接触 [Atom](https://atom.io/) ?\r\n\r\n## 语法支持\r\n* language-babel\r\n```\r\nES2016、ESNext、JSX 语法扩展\r\n```\r\n* language-postcss\r\n```\r\nPostCSS 语法高亮\r\n```\r\n\r\n## 自动补全\r\n* autocomplete-modules\r\n```\r\n模块名自动补全\r\n```\r\n* autocomplete-paths\r\n```\r\n路径自动补全\r\n```\r\n* atom-ternjs\r\n```\r\nES5, ES6, ES7, Node.js, jQuery, Angular 等等 js 代码自动补全\r\n```\r\n* emmet\r\n```\r\n快速手写 HTML, CSS, Sass / SCSS / LESS\r\n```\r\n\r\n## 语法检查\r\n* linter\r\n```\r\n基本语法检查框架\r\n```\r\n* linter-jshint\r\n```\r\n基于 jshint 的 JavaScript 语法检查插件\r\n```\r\n* linter-eslint\r\n```\r\n基于 ESLint 的 JavaScript 语法检查插件\r\n```\r\n\r\n## 版本控制\r\n* git-plus\r\n```\r\n丢掉终端，在 Atom 里面执行 Git 命令\r\n```\r\n* merge-conflicts\r\n```\r\n通过 Atom 处理冲突的文件\r\n```\r\n\r\n## 扩展功能\r\n* minimap\r\n```\r\n源码预览图\r\n```\r\n* file-icons\r\n```\r\n显示文件类型对应的图标\r\n```\r\n* atom-beautify\r\n```\r\n代码格式化\r\n```\r\n* pigments\r\n```\r\n代码颜色可视化\r\n```\r\n* color-picker\r\n```\r\n取色器\r\n```\r\n* highlight-selected\r\n```\r\n高亮选中\r\n```\r\n* minimap-highlight-selected\r\n```\r\n源码预览图中高亮选中\r\n```\r\n* docblockr\r\n```\r\n注释插件\r\n```\r\n* markdown-preview-plus\r\n```\r\nmarkdown 实时预览\r\n```\r\n* hyperclick\r\n```\r\n跳转到变量定义文件，需要配合 js-hyperclick 使用\r\n```\r\n* js-hyperclick\r\n```\r\n跳转到变量定义文件，需要配合 hyperclick 使用\r\n```\r\n* travis-ci-status\r\n```\r\n底部状态栏扩展\r\n```\r\n\r\n\u003e 本作品采用 [知识共享署名 4.0 国际许可协议](https://creativecommons.org/licenses/by/4.0/) 进行许可。\r\n","cover":"","link":"awesome-atom-packages-zh.html","preview":"\u003cp\u003e这是一个适用于 Web 开发者的 Atom 插件列表。 有了这些插件帮助， Atom 可以为我们提供类似 IDE 的功能.\u003c/p\u003e\n","title":"一些适用于前端开发的 Atom 插件"},{"content":"\r\nSome Useful Atom Packages for Web Developers ! New to [Atom](https://atom.io/)?\r\n\r\n## Syntax Support\r\n* language-babel\r\n```\r\nLanguage grammar for all versions of JavaScript including ES2016 and ESNext, JSX\r\n```\r\n* language-postcss\r\n```\r\nSyntax highlighting for PostCSS\r\n```\r\n\r\n## Autocomplete\r\n* autocomplete-modules\r\n```\r\nAutocomplete for require/import statements\r\n```\r\n* autocomplete-paths\r\n```\r\nAdds path autocompletion to autocomplete-plus\r\n```\r\n* atom-ternjs\r\n```\r\nAutocomplete for ES5, ES6, ES7, Node.js, jQuery, Angular and more\r\n```\r\n* emmet\r\n```\r\nAllow you to work quickly when writing HTML, CSS, Sass / SCSS and LESS syntaxes\r\n```\r\n\r\n## Syntax Checking\r\n* linter\r\n```\r\nA Base Linter with Cow Powers\r\n```\r\n* linter-jshint\r\n```\r\nLinter plugin for JavaScript, using jshint\r\n```\r\n* linter-eslint\r\n```\r\nLint JavaScript on the fly, using ESLint\r\n```\r\n\r\n## Version Control\r\n* git-plus\r\n```\r\nDo git things without the terminal\r\n```\r\n* merge-conflicts\r\n```\r\nResolve git conflicts within Atom\r\n```\r\n\r\n## Extension\r\n* minimap\r\n```\r\nA preview of the full source code\r\n```\r\n* file-icons\r\n```\r\nAssign file extension icons and colours for improved visual grepping\r\n```\r\n* atom-beautify\r\n```\r\nBeautify HTML, CSS, JavaScript, and more in Atom\r\n```\r\n* pigments\r\n```\r\nA package to display colors in project and files\r\n```\r\n* color-picker\r\n```\r\nA Color Picker for Atom\r\n```\r\n* highlight-selected\r\n```\r\nHighlights the current word selected when double clicking\r\n```\r\n* minimap-highlight-selected\r\n```\r\nA minimap binding for the highlight-selected package\r\n```\r\n* docblockr\r\n```\r\nA helper package for writing documentation\r\n```\r\n* markdown-preview-plus\r\n```\r\nA real-time preview for markdown documents\r\n```\r\n* hyperclick\r\n```\r\nPluggable text-clicking UI for Atom\r\n```\r\n* js-hyperclick\r\n```\r\nA hyperclick provider that lets you jump to where variables are defined\r\n```\r\n* travis-ci-status\r\n```\r\nAdd Travis CI status of the project to the Atom status bar\r\n```\r\n\r\n\u003e This work is licensed under a [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/).\r\n","cover":"","link":"awesome-atom-packages.html","preview":"\u003cp\u003eHere\u0026rsquo;s a list of several atom-packages for Web developers. With these atom-packages , atom will provide IDE-like functionality.\u003c/p\u003e\n","title":"Awesome Atom Packages"},{"content":"\n比方说，你想要在自己网站上分享一个产品，或者是一个作品集，又或者仅仅只是一个灵感。在你发布到网上之前，你想让它看起来有吸引力，专业，或者至少得看起来像那么回事。\n\n那么你接下来该做什么呢？\n\n## 文本\n\n设计的目的是为了增强它所应用到的内容的表现形式。这看上去是显而易见的事，但内容是一个网站的主要元素，它不应该在发布后才想到要调整。\n编写的内容，就像你目前正在阅读的文章，组成了超过90%的网页。为这个文本内容添加样式将有一个很长的路要走。\n让我们假设你已经完成了你想发布的内容，同时已经创建了一个空的`style.css`文件，什么是你可以写的第一条规则？\n\n## 居中\n\n长文本很难解析，也因此不易阅读。每行设置字符限制，可以大大提高大量文本的可读性和吸引力。\n```\nbody {\n  margin: 0 auto;\n  max-width: 50em;\n}\n```\n在为文本容器添加了样式后，为文本本身添加样式可好？\n\n## 字体\n\n浏览器的默认字体为`Times`，可看起来缺乏吸引力（主要是因为它是“无样式”字体）。切换到一个无衬线字体，如`Helvetica`或`Arial`可以大大提高你网页的可读性。\n```\nbody {\n  font-family: \"Helvetica\", \"Arial\", sans-serif;\n}\n```\n如果你坚持要用衬线体，可以试试`Georgia`。\n当我们让文本更具吸引力时，也需要让它更具可读性。\n\n## 间隔\n\n当用户觉得一个页面`崩坏`的时候，通常来说都是`间距`问题。通过在文本周围和文本内设置适当的间距就可以增加页面的吸引力。\n```\nbody {\n  line-height: 1.5;\n  padding: 4em 1em;\n}\n\nh2 {\n  margin-top: 1em;\n  padding-top: 1em;\n}\n```\n虽然到目前为止布局已经大大改善，但让我们添加更多细节处理。\n\n## 颜色和对比度\n\n白色背景上的黑色文字看起来会比较扎眼。为文本选择一款较软一点的黑色，让页面阅读起来更舒服。\n```\nbody {\n  color: #555;\n}\n```\n为了保持一个良好的`对比度`，让我们为`重要`文本选择一个更黑暗的阴影。\n```\nh1,\nh2,\nstrong {\n  color: #333;\n}\n```\n虽然大部分页面在视觉上已经有所提升，但是一些元素依然显得格格不入，如代码段。\n\n## 平衡\n\n只需要一些额外的调整就可以平衡页面：\n```\ncode,\npre {\n  background: #eee;\n}\n\ncode {\n  padding: 2px 4px;\n  vertical-align: text-bottom;\n}\n\npre {\n  padding: 1em;\n}\n```\n在这一点上，你可能想让你的页面脱颖而出，让它更有个性。\n\n## 主色调\n\n大多数品牌都有一个`主色调`，作为视觉基调。在一个网页上，这个主色调可以用来强调交互元素，如`链接`。\n```\na {\n  color: #e81c4f;\n}\n```\n但是为了保持平衡/协调，我们还需要一些额外的颜色。\n\n## 辅助色\n\n主色调可以用更微妙的色调来补充，用于边框，背景，甚至正文中。\n```\nbody {\n  color: #566b78;\n}\n\ncode,\npre {\n  background: #f5f7f9;\n  border-bottom: 1px solid #d8dee9;\n  color: #a7adba;\n}\n\npre {\n  border-left: 2px solid #69c;\n}\n```\n已经改变了色调，为什么不一并改变外形/字体...\n\n## 自定义字体\n\n由于文本是网页的主要内容，使用`自定义字体`能使页面更加引人注目。\n当你可以嵌入自己的网页字体或使用类似[Typekit](https://typekit.com/)的在线服务时，让我们使用免费[谷歌字体](https://fonts.google.com/)`Roboto`：\n```\n@import 'https://fonts.googleapis.com/css?family=Roboto:300,400,500';\n\nbody {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n}\n```\n在通过自定义字体凸显你的个性后，想让页面更加丰富多彩又怎么办呢？\n\n![Spongebob rainbow meme saying 'Images'](http://jgthms.com/web-design-in-4-minutes/images.png)\n\n图片和图标既可用来作为支持你的内容的装饰品，还可以在你想要传达的信息中担当积极部分。\n\n让我们从[Unsplash](https://unsplash.com/photos/qH36EgNjPJY)挑选一张漂亮的背景图片来美化`header`。\n```\nheader {\n  background-color: #263d36;\n  background-image: url(\"header.jpg\");\n  background-position: center top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  line-height: 1.2;\n  padding: 10vw 2em;\n  text-align: center;\n}\n```\n添加`logo`\n```\nheader img {\n  display: inline-block;\n  height: 120px;\n  vertical-align: top;\n  width: 120px;\n}\n```\n让我们借这个机会，来提高文本格调。\n```\nheader h1 {\n  color: white;\n  font-size: 2.5em;\n  font-weight: 300;\n}\n\nheader a {\n  border: 1px solid #e81c4f;\n  border-radius: 290486px;\n  color: white;\n  font-size: 0.6em;\n  letter-spacing: 0.2em;\n  padding: 1em 2em;\n  text-transform: uppercase;\n  text-decoration: none;\n  transition: none 200ms ease-out;\n  transition-property: color, background;\n}\n\nheader a:hover {\n  background:  #e81c4f;\n  color: white;\n}\n```\n[瞧！](#)\n\n按照网页设计的基本原则，我们在短短几分钟内设计了一个像样的页面。只剩下最后一件事啦...\n\n## 分享爱！\n\n[**GitHub**下载链接](https://github.com/jgthms/web-design-in-4-minutes)\n\n[**Facebook**分享链接](http://www.facebook.com/sharer.php?u=http%3A%2F%2Fjgthms.com%2Fweb-design-in-4-minutes%2F)\n\n[**Twitter**分享链接](https://twitter.com/intent/tweet?text=Web%20Design%20in%204%20minutes\u0026url=http%3A%2F%2Fjgthms.com%2Fweb-design-in-4-minutes%2F\u0026via=jgthms)\n\n\n如果你想学习更过网页设计, 查看 [**MarkSheet**](http://marksheet.io/), 我的免费 HTML 和 CSS 指南.\n又或者你想马上开始尝试网页设计, 试试 [**Bulma**](http://bulma.io/), 这是我基于Flexbox的 CSS 框架.\n\n## 总结 - Web Design in 4 minutes\n\n这篇文章介绍了基本的网页设计过程和设计原则，一步步分解过程，让刚开始接触网页设计的人，也可以很快找到感觉，希望这篇文章能在你刚接触网页设计不知所措的时，给到你些帮助。\n\n感谢阅读！\n\n\u003e 本文译自2016年的[《Web Design in 4 minutes》 - Jeremy Thomas](http://jgthms.com/web-design-in-4-minutes/)，第一次翻译，同时对原文有理解性改动，水平有限，欢迎提出意见。\n\n\u003e 本作品采用 [知识共享署名 4.0 国际许可协议](https://creativecommons.org/licenses/by/4.0/) 进行许可。\n","cover":"/blog/images/web-design-in-4-minutes.png","link":"web-design-in-4-minutes.html","preview":"\u003cp\u003e比方说，你想要在自己网站上分享一个产品，或者是一个作品集，又或者仅仅只是一个灵感。在你发布到网上之前，你想让它看起来有吸引力，专业，或者至少得看起来像那么回事。那么你接下来该做什么呢？\u003c/p\u003e\n","title":"4分钟学会网页样式[译]"},{"content":"\n## Manjaro简介\nManjaro Linux 是面向桌面的、用户友好的、基于 Arch Linux 的发行版。它的一些显著特性包括：一份直观的安装程序、自动硬件检测、用于管理图形卡的特别 Bash 脚本、一组额外的桌面配置选项。 Manjaro Linux 带有三份样式，分别采用 Xfce、GNOME 3（使用Cinnamon Shell）、KDE 桌面。\n![Manjaro](/blog/images/manjaro-gnome.jpg)\n## 写在前面\n在尝试安装 Arch 之后才接触到的 Manjaro ，相比之下 Manjaro 安装简单，只需要少量配置，即可使用，降低了初学者的入门门槛，让过渡更加平缓。分享一下自己的安装过程，给刚从 Windows 过渡来的小伙伴一些参考。\n## 启动盘\n* 下载ISO,[官网传送门](http://manjaro.github.io/download/)，页面底部有torrents链接。\n* 启动盘制作工具：[Image Writer](https://launchpad.net/win32-image-writer/)，[其他工具传送门](https://wiki.manjaro.org/index.php?title=Burn_an_ISO_File)。\n## 安装\n* 进入boot直接选择之前制作好的安装介质启动。\n* 建议启动安装后选择第二项闭源驱动，Manjaro 会帮你安装好基本驱动，十分省事。\n* 剩下的就是点点点...\n## 额外配置\n### 添加`archlinuxCN`源\n```\nsudo nano /etc/pacman.conf\n在文件底部加入如下几行\n[archlinuxcn]\nSigLevel = Optional TrustedOnly\nServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch\n```\n### 安装`中文`输入法\n以安装`搜狗`为例\n```\nsudo pacman -S fcitx-sogoupinyin\nsudo pacman -S fcitx-im\nsudo pacman -S fcitx-configtool\n```\n设置中文输入法`环境变量`，否则中文输入法无法启动\n```\nsudo nano ~/.xprofile\nexport GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=\"@im=fcitx\"\n```\n保存成功后，在终端输入`fcitx`启动服务\n### 开发环境\n经过以上基本设置，Manjaro 即可达到可用的状态，接着可以根据自己的需要构建开发环境，通过`pacman`安装应用非常方便，一条命令即可完成。\n\n推荐一些自己用到的前端开发工具\n* chrome\n* atom\n* git\n* nodejs\n* npm\n\n最后推荐一款主题 [arc-theme](https://github.com/horst3180/Arc-theme)，一款漂亮的扁平化主题。\n## 总结\nManjaro 的安装过程非常简单，同时也是基于 Arch Linux 的一个相对完整的发行版，有较好的稳定性、易用、人性化，就像其官网宣传的能达到开机即用的自由操作系统，这也为想要体验自由系统的用户提供了另一种途径，让更多用户可以更平缓的进入自由系统的世界，Enjoy Manjaro!\n\n\u003e 本作品采用 [知识共享署名 4.0 国际许可协议](https://creativecommons.org/licenses/by/4.0/) 进行许可。\n","cover":"/blog/images/manjaro-gnome.jpg","link":"manjaro.html","preview":"\u003cp\u003eManjaro Linux是面向桌面的、用户友好的、基于Arch Linux的发行版。它的一些显著特性包括：一份直观的安装程序、自动硬件检测、用于管理图形卡的特别Bash脚本、一组额外的桌面配置选项。 Manjaro Linux带有三份样式，分别采用Xfce、GNOME 3（使用Cinnamon Shell）、KDE桌面。\u003c/p\u003e\n","title":"Enjoy Manjaro"},{"content":"\n\n## 纸小墨简介\n\n纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\n\n![纸小墨 - 简洁的静态博客构建工具](/blog/images/example.png)\n\n### 开始上手\n\n- 下载并解压 [Ink](http://www.chole.io/)，运行命令 `ink preview`\n\n  \u003e 注意：Linux/macOS下，使用 `./ink preview`\n\n- 使用浏览器访问 `http://localhost:8000` 预览。\n\n### 特性介绍\n- YAML格式的配置\n- Markdown格式的文章\n- 无依赖跨平台\n- 超快的构建速度\n- 不断改善的主题与排版\n- 多文章作者支持\n- 归档与标签自动生成\n- 保存时实时预览页面\n- 离线的全文关键字搜索\n\n### 配置网站\n编辑`config.yml`，使用如下格式：\n\n``` yaml\nsite:\n    title: 网站标题\n    subtitle: 网站子标题\n    limit: 每页可显示的文章数目\n    theme: 网站主题目录\n    comment: 评论插件变量(默认为Disqus账户名)\n    root: 网站根路径 #可选\n    lang: 网站语言 #支持en, zh, ru, ja，可在theme/config.yml配置\n    url: 网站链接 #用于RSS生成\n    link: 文章链接形式 #默认为{title}.html，支持{year},{month},{day},{title}变量\n\nauthors:\n    作者ID:\n        name: 作者名称\n        intro: 作者简介\n        avatar: 作者头像路径\n\nbuild:\n    output: 构建输出目录 #可选, 默认为 \"public\"\n    port: 预览端口\n    copy:\n        - 构建时将会复制的目录/文件\n    publish: |\n        ink publish 命令将会执行的脚本\n```\n\n### 创建文章\n在`source`目录中建立任意`.md`文件（可置于子文件夹），使用如下格式：\n\n``` yaml\ntitle: 文章标题\ndate: 年-月-日 时:分:秒 #创建时间，可加时区如\" +0800\"\nupdate: 年-月-日 时:分:秒 #更新时间，可选，可加时区如\" +0800\"\nauthor: 作者ID\ncover: 题图链接 #可选\ndraft: false #草稿，可选\ntop: false #置顶文章，可选\npreview: 文章预览，也可在正文中使用\u003c!--more--\u003e分割 #可选\ntags: #可选\n    - 标签1\n    - 标签2\ntype: post #指定类型为文章(post)或页面(page)，可选\n\n---\n\nMarkdown格式的正文\n```\n\n### 发布博客\n- 在博客目录下运行`ink publish`命令自动构建博客并发布。\n- 或运行`ink build`命令将生成的`public`目录下的内容手动部署。\n\n\u003e Tips: 在使用`ink preview`命令时，编辑保存文件后，博客会自动重新构建并刷新浏览器页面。\n\n## 定制支持\n\n### 修改主题\n\n默认主题在`theme`目录下，修改源代码后在该目录下运行`npm install`与`webpack`重新构建。\n\n页面包含`page.html`（文章列表）及`article.html`（文章）等，所有页面均支持[GO语言HTML模板](http://golang.org/pkg/html/template/)语法，可引用变量。\n\n### 添加页面\n\n在`source`目录下创建的任意`.html`文件将被复制，这些文件中可引用`config.yml`中site字段下的所有变量。\n\n### 博客迁移(Beta)\n\n纸小墨提供简单的Jeklly/Hexo博客文章格式转换，使用命令：\n``` shell\nink convert /path/_posts\n```\n\n### 源码编译\n\n本地运行\n\n1. 配置[GO](http://golang.org/doc/install)语言环境。\n2. 运行命令`go get github.com/InkProject/ink`，编译并获取ink。\n3. 运行命令`ink preview $GOPATH/src/github.com/InkProject/ink/template`，预览博客。\n\nDocker构建（示例）\n\n1. Clone源码 `git clone git@github.com:InkProject/ink.git`。\n2. 源码目录下构建镜像`docker build -t ink .`。\n3. 运行容器`docker run -p 8000:80 ink`。\n\n## 三方主题\n\n- Pure: [https://github.com/Xdatk/ink-pure](https://github.com/Xdatk/ink-pure)\n- Werttin: [https://github.com/Skimige/ink_Werttin](https://github.com/Skimige/ink_Werttin)\n\n## 反馈贡献\n\n纸小墨基于 [CC Attribution-NonCommercial License 4.0](https://creativecommons.org/licenses/by-nc/4.0/) 协议，目前为止它仍然是个非成熟的开源项目，非常欢迎任何人的任何贡献。如有问题可报告至 [https://github.com/InkProject/ink/issues](https://github.com/InkProject/ink/issues)。\n\n## 更新历史\n\n- [2016-07-11] 修复诸多Issue与合并一些PR。\n- [2015-08-15] 一些Bug修复，新增RSS订阅支持，主题改善。\n- [2015-07-04] 数项Bug修复与主题改善，支持置顶，多语言，子模板。\n- [2015-06-04] 编译更多平台版本，增加标签与存档页。\n- [2015-03-01] Beta版本，基础功能完成。\n\n## 更新计划\n\n- 排版深度优化\n- 纸小墨编辑器\n\n## 正在使用\n\n- [http://www.chole.io/blog/](http://www.chole.io/blog/)\n- [http://blog.hyper.sh/](http://blog.hyper.sh/)\n- [http://wangxu.me/](http://wangxu.me/)\n- [http://whzecomjm.com/](http://whzecomjm.com/)\n- [http://www.shery.me/blog/](http://www.shery.me/blog/)\n","cover":"/blog/images/example.png","link":"ink-blog-tool.html","preview":"\u003cp\u003e纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\u003c/p\u003e\n","title":"简洁的静态博客构建工具 —— 纸小墨（InkPaper）"},{"content":"\n\n## Introduce\n\nInkPaper is an static blog generator developed by Golang, No dependencies, Cross platform, Easy use, Fast build, Elegant theme.\n\n![InkPaper - An Elegant Static Blog Generator](/blog/images/example-en.png)\n\n### Quick Start\n- Download \u0026 Extract [Ink](http://www.chole.io/)，Run `ink preview`\n\n  \u003e Tips：Linux/macOS, use `./ink preview`\n\n- Open `http://localhost:8000` in browser to preview\n\n### Website Configuration\nEdit `config.yml`, use format:\n\n``` yaml\nsite:\n    title: Website Title\n    subtitle: Website Subtitle\n    limit: Max Article Count Per Page\n    theme: Website Theme Directory\n    comment: Comment Plugin Variable (Default is disqus username)\n    root: Website Root Path #Optional\n    lang: Website Language #Support en, zh, ru, ja, Configurable in theme/lang.yml\n    url: Website URL #For RSS Generating\n    link: Article Link Scheme #Default Is {title}.html，Support {year},{month},{day},{title} Variables\n\nauthors:\n    AuthorID:\n        name: Author Name\n        intro: Author Motto\n        avatar: Author Avatar Path\n\nbuild:\n    output: Build Output Directory #Optional, Default is \"public\"\n    port: Preview Port\n    copy:\n        - Copied Files When Build\n    publish: |\n        Excuted command when use 'ink publish'\n```\n\n### Writing\nCreate any `.md` file in `source` directory (Support subdirectory), use format:\n\n``` yaml\ntitle: Article Title\ndate: Year-Month-Day Hour:Minute:Second #Created Time，Support TimeZone, such as \" +0800\"\nupdate: Year-Month-Day Hour:Minute:Second #Updated Time，Optional，Support TimeZone, such as \" +0800\"\nauthor: AuthorID\ncover: Article Cover Path #Optional\ndraft: false #If Draft，Optional\ntop: false #Place article to top, Optional\npreview: Article Preview，Also use \u003c!--more--\u003e to split in body #Optional\ntags: #Optional\n    - Tag1\n    - Tag2\ntype: post #Specify type is post or page, Optional\n\n---\n\nMarkdown Format's Body\n```\n\n### Publish\n- Run `ink publish` in blog directory to automatically build and publish\n- Or run `ink build` to manually deploy generated `public` directory\n\n\u003e **Tips**: When files changed，`ink preview` will automatically rebuild blog，refresh browser to update.\n\n## Customization\n\n### Modify Theme\n\nDefault theme placed in `theme` folder, run `npm install` and `webpack` to rebuild in this folder.\n\npage `page.html` (article list) and `article.html` (article), use variable with [Golang Template](http://golang.org/pkg/html/template/) syntax.\n\n### New Page\n\nCreated any `.html` file will be copied to `source` directory, could use all variables on `site` field in `config.yml`.\n\n### Blog Migrate (Beta)\n\nSupport simple Jeklly/Hexo post convert, use:\n\n``` shell\nink convert /path/_posts\n```\n\n### Build from source\n\nLocal Build\n\n1. Install [Golang](http://golang.org/doc/install) environment\n2. Run `go get github.com/InkProject/ink`, compile and get ink\n3. Run `ink preview $GOPATH/src/github.com/InkProject/ink/template`, preview blog\n\nDocker Build (Example)\n\n1. Clone code `git clone git@github.com:InkProject/ink.git`\n2. Build image `docker build -t ink .` in source directory\n3. Run container `docker run -p 8888:80 ink`\n\n## Theme\n\n- Pure: [https://github.com/Xdatk/ink-pure](https://github.com/Xdatk/ink-pure)\n- Werttin: [https://github.com/Skimige/ink_Werttin](https://github.com/Skimige/ink_Werttin)\n\n## Issue Report\n\n[CC Attribution-NonCommercial License 4.0](https://creativecommons.org/licenses/by-nc/4.0/)\n\n[https://github.com/InkProject/ink/issues](https://github.com/InkProject/ink/issues)\n\n## Change Log\n\n- [2016-07-11] Fix bugs and merge many PRs\n- [2015-08-15] Bug fix, support RSS feed, improve theme\n- [2015-07-04] Bug fix, improve theme, support top, i18n, subtemplate\n- [2015-06-04] Build more platform, add archive and tag page\n- [2015-03-01] Release first beta version\n\n## Develop Plan\n\n- Improve Theme\n- InkPaper Editor\n\n## They are using\n\n- [http://www.chole.io/blog/](http://www.chole.io/blog/)\n- [http://blog.hyper.sh/](http://blog.hyper.sh/)\n- [http://wangxu.me/](http://wangxu.me/)\n- [http://whzecomjm.com/](http://whzecomjm.com/)\n- [http://www.shery.me/blog/](http://www.shery.me/blog/)\n","cover":"/blog/images/example-en.png","link":"ink-blog-tool-en.html","preview":"\u003cp\u003eInkPaper is an static blog generator developed by Golang, No dependencies, Cross platform, Easy use, Fast build, Elegant theme.\u003c/p\u003e\n","title":"An Elegant Static Blog Generator —— InkPaper"},{"content":"\n## Hello InkPaper\n这是使用纸小墨（InkPaper）快速构建的第一篇Blog。\n\nEnjoy InkPaper,Enjoy the simplicity!\n## 纸小墨简介\n\n纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\n\n![纸小墨 - 简洁的静态博客构建工具](/blog/images/example.png)\n","cover":"/blog/images/example.png","link":"hello.html","preview":"\u003cp\u003e纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\u003c/p\u003e\n","title":"Hello InkPaper"}]